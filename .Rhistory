shiny::runApp('test')
runApp('test')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('test')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
runApp('map')
install.packages("leaflet")
shiny::runApp('map')
runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
shiny::runApp('map')
runApp('map')
shiny::runApp('map')
runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
shiny::runApp('map')
jsdf
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
shiny::runApp('map')
shiny::runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
shiny::runApp('map')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='fosjz0-amanda0zhang',
token='635B6AA88702D5184F0DF3713B39F63F',
secret='<SECRET>')
rsconnect::setAccountInfo(name='fosjz0-amanda0zhang',
token='635B6AA88702D5184F0DF3713B39F63F',
secret='<SECRET>')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='fosjz0-amanda0zhang',
token='635B6AA88702D5184F0DF3713B39F63F',
secret='<SECRET>')
rsconnect::setAccountInfo(name='fosjz0-amanda0zhang',
token='635B6AA88702D5184F0DF3713B39F63F',
secret='Zc86uJRW7vGHdKClp1ua818EEUiW2RGdEag9QP0r')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
library(rsconnect)
rsconnect::deployApp('desktop/project-dynamar-map/map')
rsconnect::deployApp('Desktop/project-dynamar-map/map')
rsconnect::deployApp('Home/Desktop/project-dynamar-map')
rsconnect::deployApp('Home/Desktop/project-dynamar-map')
library(rsconnect)
deployApp()
install.packages('rsconnect')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='fosjz0-amanda0zhang',
token='1A0563E7559762021EFDB9DEAC3031F9',
secret='o4A0HIC140BHRO63gUlRZr6k4hOT2NMCPAo9JT6n')
library(rsconnect)
rsconnect::deployApp('Desktop/project-dynamar-map')
deployApp()
deployApp()
deployApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
leaflet() %>% addTiles() %>% addPolylines(lat=c(38.8833, 35.00), lng=c(-77.0167, 103.00))
runApp()
runApp()
deployApp()
deployApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
sdf
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sdf
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
sldjf
runApp()
sdf
runApp()
runApp()
sdf
runApp()
runApp()
sdfk
runApp()
shiny::runApp()
lsdf
runApp()
dsf
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
jsdkf
runApp()
runApp()
runApp()
fsdf
sdkf
runApp()
tracks <- read.csv("https://raw.githubusercontent.com/amndazhang/project-dynamar-map/master/Processed_GPE3_Tracks_BUM_SAL.csv")
library(RColorBrewer)
tracks <- read.csv("https://raw.githubusercontent.com/amndazhang/project-dynamar-map/master/Processed_GPE3_Tracks_BUM_SAL.csv")
unique_fish <- unique(tracks$species)
map <- leaflet() %>% addProviderTiles("CartoDB.Positron")
ui <- bootstrapPage(
tags$style(type = "text/css", "html, body {width:100%;height:100%}"),
leafletOutput("map", width = "100%", height = "100%")
)
server <- function(input, output, session) {
output$map <- renderLeaflet({
leaflet(tracks) %>% addTiles() %>%
fitBounds(~min(lon), ~min(lat), ~max(lon), ~max(lat)) %>%
# Overlay groups
addCircles(lng = ~lon, lat = ~lat, weight = 2, radius = 5,
label = ~htmlEscape(date), group = "Points") %>%
addPolylines(lng = ~lon, lat = ~lat, weight = 2, group = "Outline") %>%
# Layers control
addLayersControl(
baseGroups = c("Show All", "Show Specific"),
overlayGroups = c("Points", "Outline"),
options = layersControlOptions(collapsed = FALSE)) %>%
addLegend("bottomright",
colors = c("#ff4d00",  "#0033ff"),
labels = c("SAL", "BUM"),
title = "Species",
opacity = 1)
})
observe({
})
}
shinyApp(ui, server)
shiny::runApp()
runApp()
runApp()
